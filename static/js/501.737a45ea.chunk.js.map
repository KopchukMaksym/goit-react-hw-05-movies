{"version":3,"file":"static/js/501.737a45ea.chunk.js","mappings":"mRAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAkB,WAC7B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wBAA6C,CAClDI,OAAQ,CACNC,QAASJ,IAGd,EAEYK,EAAuB,SAAAC,GAClC,OAAOJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,GAAM,CAC1CH,OAAQ,CACNC,QAASJ,IAGd,EAEYO,EAAoB,SAAAD,GAC/B,OAAOJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,YAA6C,CAClDH,OAAQ,CACNC,QAASJ,IAGd,EACYQ,EAAuB,SAAAF,GAClC,OAAOJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,YAA6C,CAClDH,OAAQ,CACNC,QAASJ,IAGd,EACYS,EAAiB,SAAAC,GAC5B,OAAOR,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAsC,CAC3CI,OAAQ,CACNQ,MAAOD,EACPN,QAASJ,IAGd,C,4ECvCYY,EAAe,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACpC,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMP,IAAMU,MAAO,CAAEF,KAAAA,GAA1C,UACE,uBAAID,EAAMI,oBAIjB,ECRYC,EAAe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQL,EAAW,EAAXA,KACrC,OACE,wBACGK,EAAOC,KAAI,SAAAP,GACV,OAAO,SAACD,EAAD,CAA6BC,MAAOA,EAAOC,KAAMA,GAA9BD,EAAMP,GACjC,KAGN,C,kHCqBD,UA3Ba,WACX,OAA4Be,EAAAA,EAAAA,UAAS,IAArC,eAAOF,EAAP,KAAeG,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAW,mCAAG,gHAINxB,EAAAA,EAAAA,MAJM,gBAGNyB,EAHM,EAGdC,KAAQD,QAEVJ,EAAUI,GALM,gDAOhBE,QAAQC,IAAI,QAAZ,MAPgB,yDAAH,qDAejB,OAJAC,EAAAA,EAAAA,YAAU,WACRL,GACD,GAAE,KAGD,4BACE,4CACA,SAAC,IAAD,CAAcN,OAAQA,EAAQL,KAAMS,EAASQ,aAGlD,C","sources":["api/fetchApi.js","components/Trending/TrendingItem.jsx","components/Trending/TrendingList.jsx","pages/Home/HomePages.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c63e4d3fe5eb4a31f62c83bce29dfebb';\n\nexport const fetchApiTreding = () => {\n  return axios.get(`${BASE_URL}/trending/movie/week`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchApiMovieDetails = id => {\n  return axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchApiMovieCast = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\nexport const fetchApiMovieReviews = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\nexport const fetchApiSearch = search => {\n  return axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      query: search,\n      api_key: API_KEY,\n    },\n  });\n};\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const TrendingItem = ({ movie, from }) => {\n  return (\n    <li>\n      <Link to={`/movies/${movie.id}`} state={{ from }}>\n        <p>{movie.original_title}</p>\n      </Link>\n    </li>\n  );\n};\n\nTrendingItem.propTypes = {\n  from: PropTypes.string,\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    original_title: PropTypes.string,\n  }),\n};\n","import { TrendingItem } from './TrendingItem';\nimport PropTypes from 'prop-types';\n\nexport const TrendingList = ({ movies, from }) => {\n  return (\n    <ul>\n      {movies.map(movie => {\n        return <TrendingItem key={movie.id} movie={movie} from={from} />;\n      })}\n    </ul>\n  );\n};\n\nTrendingList.propTypes = {\n  from: PropTypes.string,\n  movies: PropTypes.array.isRequired,\n};\n","import { fetchApiTreding } from 'api/fetchApi';\nimport { TrendingList } from 'components/Trending/TrendingList';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  const trendingApi = async () => {\n    try {\n      const {\n        data: { results },\n      } = await fetchApiTreding();\n      setMovies(results);\n    } catch (e) {\n      console.log('error', e);\n    }\n  };\n\n  useEffect(() => {\n    trendingApi();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <TrendingList movies={movies} from={location.pathname} />\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["BASE_URL","API_KEY","fetchApiTreding","axios","params","api_key","fetchApiMovieDetails","id","fetchApiMovieCast","fetchApiMovieReviews","fetchApiSearch","search","query","TrendingItem","movie","from","to","state","original_title","TrendingList","movies","map","useState","setMovies","location","useLocation","trendingApi","results","data","console","log","useEffect","pathname"],"sourceRoot":""}