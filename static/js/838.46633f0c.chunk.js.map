{"version":3,"file":"static/js/838.46633f0c.chunk.js","mappings":"mRAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAkB,WAC7B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wBAA6C,CAClDI,OAAQ,CACNC,QAASJ,IAGd,EAEYK,EAAuB,SAAAC,GAClC,OAAOJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,GAAM,CAC1CH,OAAQ,CACNC,QAASJ,IAGd,EAEYO,EAAoB,SAAAD,GAC/B,OAAOJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,YAA6C,CAClDH,OAAQ,CACNC,QAASJ,IAGd,EACYQ,EAAuB,SAAAF,GAClC,OAAOJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,YAA6C,CAClDH,OAAQ,CACNC,QAASJ,IAGd,EACYS,EAAiB,SAAAC,GAC5B,OAAOR,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAsC,CAC3CI,OAAQ,CACNQ,MAAOD,EACPN,QAASJ,IAGd,C,yGCJD,UAlCgB,WACd,OAA8BY,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAe,mCAAG,gHAIVT,EAAAA,EAAAA,IAAqBO,GAJX,gBAGVG,EAHU,EAGlBC,KAAQD,QAEVJ,EAAWI,GALS,gDAOpBE,QAAQC,IAAI,QAAZ,MAPoB,yDAAH,qDAgBrB,OALAC,EAAAA,EAAAA,YAAU,WACRL,GAED,GAAE,KAGD,6BACKJ,EAAQU,QACTV,EAAQW,KAAI,SAAAC,GAAE,OACZ,4BACE,qCAAaA,EAAGC,WAChB,uBAAID,EAAGE,YAFCF,EAAGnB,GADD,KAOdO,EAAQU,SAAU,uEAGzB,C","sources":["api/fetchApi.js","components/MovieReviews/MovieReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c63e4d3fe5eb4a31f62c83bce29dfebb';\n\nexport const fetchApiTreding = () => {\n  return axios.get(`${BASE_URL}/trending/movie/week`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchApiMovieDetails = id => {\n  return axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchApiMovieCast = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\nexport const fetchApiMovieReviews = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\nexport const fetchApiSearch = search => {\n  return axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      query: search,\n      api_key: API_KEY,\n    },\n  });\n};\n","import { fetchApiMovieReviews } from 'api/fetchApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  const MovieReviewsApi = async () => {\n    try {\n      const {\n        data: { results },\n      } = await fetchApiMovieReviews(movieId);\n      setReviews(results);\n    } catch (e) {\n      console.log('error', e);\n    }\n  };\n\n  useEffect(() => {\n    MovieReviewsApi();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div>\n      {!!reviews.length &&\n        reviews.map(el => (\n          <div key={el.id}>\n            <h3>Author: {el.author}</h3>\n            <p>{el.content}</p>\n          </div>\n        ))}\n\n      {!reviews.length && <p>We don't have any reviews for this movie.</p>}\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","fetchApiTreding","axios","params","api_key","fetchApiMovieDetails","id","fetchApiMovieCast","fetchApiMovieReviews","fetchApiSearch","search","query","useState","reviews","setReviews","movieId","useParams","MovieReviewsApi","results","data","console","log","useEffect","length","map","el","author","content"],"sourceRoot":""}