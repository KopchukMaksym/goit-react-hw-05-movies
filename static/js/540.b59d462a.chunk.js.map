{"version":3,"file":"static/js/540.b59d462a.chunk.js","mappings":"mRAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAkB,WAC7B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wBAA6C,CAClDI,OAAQ,CACNC,QAASJ,IAGd,EAEYK,EAAuB,SAAAC,GAClC,OAAOJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,GAAM,CAC1CH,OAAQ,CACNC,QAASJ,IAGd,EAEYO,EAAoB,SAAAD,GAC/B,OAAOJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,YAA6C,CAClDH,OAAQ,CACNC,QAASJ,IAGd,EACYQ,EAAuB,SAAAF,GAClC,OAAOJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,YAA6C,CAClDH,OAAQ,CACNC,QAASJ,IAGd,EACYS,EAAiB,SAAAC,GAC5B,OAAOR,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAsC,CAC3CI,OAAQ,CACNQ,MAAOD,EACPN,QAASJ,IAGd,C,4ECvCYY,EAAe,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACpC,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMP,IAAMU,MAAO,CAAEF,KAAAA,GAA1C,UACE,uBAAID,EAAMI,oBAIjB,ECRYC,EAAe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQL,EAAW,EAAXA,KACrC,OACE,wBACGK,EAAOC,KAAI,SAAAP,GACV,OAAO,SAACD,EAAD,CAA6BC,MAAOA,EAAOC,KAAMA,GAA9BD,EAAMP,GACjC,KAGN,C,sICPYe,EAAO,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACrB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KAQA,OACE,kBAAMC,SAPS,SAAAC,GACfA,EAAMC,iBACNH,EAAU,IACVF,EAAaZ,EACd,EAGC,WACE,kBACEkB,SAAU,SAAAC,GAAC,OAAIL,EAAUK,EAAEC,OAAOC,MAAvB,EACXC,KAAK,OACLD,MAAOrB,KAET,mBAAQsB,KAAK,SAAb,sBAGL,E,2BCuBD,EAvCe,WACb,OAA4BT,EAAAA,EAAAA,UAAS,IAArC,eAAOJ,EAAP,KAAec,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMzB,EAAQwB,EAAaE,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAc,mCAAG,WAAM7B,GAAN,mGAITF,EAAAA,EAAAA,IAAeE,GAJN,gBAGT8B,EAHS,EAGjBC,KAAQD,QAEVR,EAAUQ,GALS,gDAOnBE,QAAQC,IAAI,QAAZ,MAPmB,yDAAH,sDAoBpB,OAJAC,EAAAA,EAAAA,YAAU,WACNlC,GAAS6B,EAAe7B,EAC3B,GAAE,CAACA,KAGF,4BACE,SAACU,EAAD,CAAMC,aAXW,SAAAX,GACnByB,EAAgB,CAAEzB,MAAAA,IAClB6B,EAAe7B,EAChB,MASMQ,EAAO2B,SACR,SAAC5B,EAAA,EAAD,CACEC,OAAQA,EACRL,KAAMwB,EAASS,SAAWT,EAAS5B,WAK5C,C","sources":["api/fetchApi.js","components/Trending/TrendingItem.jsx","components/Trending/TrendingList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/MoviesPages.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c63e4d3fe5eb4a31f62c83bce29dfebb';\n\nexport const fetchApiTreding = () => {\n  return axios.get(`${BASE_URL}/trending/movie/week`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchApiMovieDetails = id => {\n  return axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchApiMovieCast = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\nexport const fetchApiMovieReviews = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\nexport const fetchApiSearch = search => {\n  return axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      query: search,\n      api_key: API_KEY,\n    },\n  });\n};\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const TrendingItem = ({ movie, from }) => {\n  return (\n    <li>\n      <Link to={`/movies/${movie.id}`} state={{ from }}>\n        <p>{movie.original_title}</p>\n      </Link>\n    </li>\n  );\n};\n\nTrendingItem.propTypes = {\n  from: PropTypes.string,\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    original_title: PropTypes.string,\n  }),\n};\n","import { TrendingItem } from './TrendingItem';\nimport PropTypes from 'prop-types';\n\nexport const TrendingList = ({ movies, from }) => {\n  return (\n    <ul>\n      {movies.map(movie => {\n        return <TrendingItem key={movie.id} movie={movie} from={from} />;\n      })}\n    </ul>\n  );\n};\n\nTrendingList.propTypes = {\n  from: PropTypes.string,\n  movies: PropTypes.array.isRequired,\n};\n","import { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nexport const Form = ({ handleSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setSearch('');\n    handleSubmit(search);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        onChange={e => setSearch(e.target.value)}\n        type=\"text\"\n        value={search}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  handleSubmit: PropTypes.func,\n};\n","import { TrendingList } from 'components/Trending/TrendingList';\nimport { Form } from '../../components/SearchForm/SearchForm';\n\nimport { fetchApiSearch } from 'api/fetchApi';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  const movieSearchApi = async query => {\n    try {\n      const {\n        data: { results },\n      } = await fetchApiSearch(query);\n      setMovies(results);\n    } catch (e) {\n      console.log('error', e);\n    }\n  };\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n    movieSearchApi(query);\n  };\n\n  useEffect(() => {\n    !!query && movieSearchApi(query);\n  }, [query]);\n\n  return (\n    <div>\n      <Form handleSubmit={handleSubmit} />\n      {!!movies.length && (\n        <TrendingList\n          movies={movies}\n          from={location.pathname + location.search}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","fetchApiTreding","axios","params","api_key","fetchApiMovieDetails","id","fetchApiMovieCast","fetchApiMovieReviews","fetchApiSearch","search","query","TrendingItem","movie","from","to","state","original_title","TrendingList","movies","map","Form","handleSubmit","useState","setSearch","onSubmit","event","preventDefault","onChange","e","target","value","type","setMovies","useSearchParams","searchParams","setSearchParams","get","location","useLocation","movieSearchApi","results","data","console","log","useEffect","length","pathname"],"sourceRoot":""}